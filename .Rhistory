devtools::document()
?createSlotAggList
?processSlots
devtools::document()
?processSlots
zz <- read.rdf('C:/alan/RAND/LLNLProj/results/Rch.rdf')
library(RWDataPlot)
zz <- read.rdf('C:/alan/RAND/LLNLProj/results/Rch.rdf')
listSlots(zz)
vr <- rdfSlotToMatrix(rdf = zz, 'VirginRiver.Inflow')
vr[1:12,]
library(RWDataPlot)
zz <- read.rdf('C:/alan/CRSS/CRSS.Oct2014/temp/rw_Rch_000_RButler.rdf')
listSlots(zz)
vr = rdfSlotToMatrix(zz,'VirginRiver.Inflow')
vr
vr[1:12]
zz <- read.rdf('C:/alan/CRSS/CRSS.Oct2014/temp/rw_Rch_001_RButler.rdf')
vr = rdfSlotToMatrix(zz,'VirginRiver.Inflow')
vr[1:12]
rm(list = ls())
source('C:/alan/CRSS/CRSS.Oct2014/getCritStats.R')
source('C:/alan/CRSS/CRSS.Oct2014/getCritStats.R')
library(RWDataPlot)
zz <- read.rdf('C:/alan/CRSS/CRSS.Oct2014/results/annualData.txt')
zz <- read.rdf('C:/alan/CRSS/CRSS.Oct2014/results/annualData.txt')
zz <- read.table('C:/alan/CRSS/CRSS.Oct2014/results/annualData.txt',header = T)
names(zz)
levels(zz$Scenario)
levels(zz$variable)
levels(zz$Variable)
zz <- zz[zz$Variable == "Mead.Pool Elevation_EOCY_1",]
zz
zz2 <- ddp
library(plyr)
?ddply
names(zz)
xx <- ddply(zz[zz$Variable == 'Mead.Pool Elevation_EOCY_1',],.(Scenario,Trace,Year),summarize,LTThresh = Value <= 1050)
xx[1:5,]
sum(c('FALSE','TRUE','TRUE'))
sum(c(FALSE,TRUE,TRUE))
mean(c(FALSE,TRUE,TRUE))
yy <- ddply(xx,.(Scenario,Year),summarize,PrctLT = mean(LTThresh))
yy[1:5,]
levels(yy$Scenario)
yy[yy$Year %in% 2015:2019,]
aug <- read.rdf('C:/alan/CRSS/CRSS.Aug2014/Scenario/DNF,2007Dems,IG/KeySlots.rdf')
oct <- read.rdf('C:/alan/CRSS/CRSS.Aug2014/Scenario/DNF,2007Dems,IG/KeySlots.rdf')
mA <- rdfSlotToMatrix(aug, 'Mead.Pool Elevation')
mO <- rdfSlotToMatrix(oct, 'Mead.Pool Elevation')
mA <- mA[seq(12,60,12),]
mO <- mO[seq(12,60,12),]
mA[mA <= 1050,] <- 1
dim(mA)
mA[mA <= 1050] <- 1
mA[mA > 1050] = 1
ma <- apply(mA, 1, mean)
mO[mO <= 1050] <- 1
mA[mA > 1050] <- 0
mO[mO > 1050] <- 0
mO <- apply(mO, 1, mean)
mA <- rdfSlotToMatrix(aug, 'Mead.Pool Elevation')
mA <- mA[seq(12,60,12),]
mA[mA <= 1050] <- 1
mA[mA > 1050] <- 0
ma <- apply(mA, 1, mean)
mO
mA
ma <- apply(mA, 1, mean)
mA
ma
mO
yy
yy[yy$Year %in% 2015:2019]
yy[yy$Year %in% 2015:2019,]
ma
mO
mO <- read.rdf('C:/alan/CRSS/CRSS.Oct2014/Scenario/DNF,2007Dems,IG/KeySlots.rdf')
mO <- rdfSlotToMatrix(mO)[seq(12,60,12),]
mO <- rdfSlotToMatrix(mO)
mO <- rdfSlotToMatrix(mO,'Mead.Pool Elevation')[seq(12,60,12),]
mO[mO<=1050] <- 1
mO[mO > 1050] <- 0
mO <- apply(mO,1,mean)
mO
yy[yy$Year %in% 2015:2019,]
ma
library(RWDataPlot)
?createSlotAggList
zz <- read.rdf('C:/alan/CRSS/CRSS.Oct2014/Scenario/DNF,2007Dems,IG/Res.rdf')
listSlots(zz)
source('C:/alan/code/testShiny/getScenData.R')
source('C:/alan/code/testShiny/getScenData.R')
source('C:/alan/code/testShiny/getScenData.R')
zz <- read.table('C:/alan/code/testShiny/critStats.txt',header=T)
names(zz)
levels(zz$Scenario)
levels(zz$Variable)
length(levels(zz$Variable))
source('C:/alan/code/testShiny/getScenData.R')
zz <- read.table('C:/alan/code/testShiny/critStats.txt',header=T)
levels(zz$Scenario)
levels(zz$Variable)
names(zz)
res <- rep(NA,dim(zz)[1])
length(res)
res[zz$Variable == 'Bronco Pool Elevation' | zz$Variable == 'Bronco Storage'] <- 'Bronco'
res[zz$Variable == 'Deep Snow Pool Elevation' | zz$Variable == 'Deep Snow Storage'] <- 'Deep Snow'
levels(as.factor(res))
var <- rep(NA,dim(zz)[1])
var[zz$Variable == 'Bronco Storage' | zz$Variable == 'Deep Snow Storage'] <- 'Storage'
var[zz$Variable == 'Bronco Storage' | zz$Variable == 'Deep Snow Storage'] <- 'Pool Elevation'
var <- rep(NA,dim(zz)[1])
var[zz$Variable == 'Bronco Storage' | zz$Variable == 'Deep Snow Storage'] <- 'Storage'
var[zz$Variable == 'Bronco Pool Elevation' | zz$Variable == 'Deep Snow Pool Elevation'] <- 'Pool Elevation'
levels(as.factor(var))
zz$Variable <- var
zz$Reservoir <- res
is.factor(zz$Variable)
is.factor(zz$Reservoir)
zz$Variable <- as.factor(zz$Variable)
zz$Reservoir <- as.factor(zz$Reservoir)
write.table(zz, 'C:/alan/code/testShiny/fullData.txt')
xx <- read.table('C:/alan/code/testShiny/fullData.txt')
xx <- read.table('C:/alan/code/testShiny/fullData.txt',header = T)
dim(xx)
dim(zz)
names(xx)
names(zz)
sum(xx-zz)
zz <- zz[zz$Year %in% 2015:2019,]
dim(zz)
dim(xx)
levels(xx$Scenario)
xx <- xx[xx$Scenario %in% c('Baseline','Scenario A'),]
dim(xx)
958272/12
958272/2
zz <- zz[zz$Scenario %in% c('Baseline','Scenario A'),]
dim(zz)
write.table(zz,'C:/alan/code/testShiny/trimData.txt')
zz <- read.table('C:/alan/CRSS/CRSS.Oct2014/results/critStats.txt',header = T)
names(zz)
levels(zz$Variable)
library(RWDataPlot)
?RWDataPlot
?RWDataPlot-package
?"RWDataPlot-package""
?"RWDataPlot-package"
sList <- rbind(c('KeySlots.rdf','Powell.Pool Elevation','Monthly',NA,'Powell'),c('KeySlots.rdf','Mead.Pool Elevation', 'Monthly',NA,'Mead'))
sList
sList <- createSlotAggList(sList)
sList
getDataForAllScens('DNF,2007Dems,IG','Oct',sList,'C:/alan/CRSS/CRSS.Oct2014/Scenario/','C:/alan/CRSS/CRSS.Oct2014/results/PMMonthly.txt')
zz <- read.table('C:/alan/CRSS/CRSS.Oct2014/results/PMMonthly.txt',header = T)
levels(zz$Variable)
names(zz)
range(zz$Year)
zz2 <- zz
zz <- zz[zz$Year %in% 2015:2026,]
dim(zz)
30240/2
zzF <- zz$Powell[zz$Mead <= 1000]
length(zzF)
zzF
zzF <- zz$Powell[Which(zz$Mead <= 1000)]
zzF <- zz$Powell[which(zz$Mead <= 1000)]
length(zzF)
zzF
zz$Mead <= 1000
zz$Mead[1:10]
zzF <- data.frame(Mead = zz$Value[zz$Variable == 'Mead'])
zzF
dim(zzF)
zzF <- data.frame(Mead = zz$Value[zz$Variable == 'Mead'], Powell = zz$Value[zz$Variable == 'Powell'])
dim(zzF)
zzF <- zzF[zz$Mead <= 1000,]
dim(zzF)
zzF <- data.frame(Mead = zz$Value[zz$Variable == 'Mead'], Powell = zz$Value[zz$Variable == 'Powell'])
range(zz$Mead)
range(zz$Mead)
range(zzF$Mead)
zzF <- zzF[zzF$Mead <= 1000,]
dim(zzF)
range(zzF$Mead)
range(zzF$Powell)
zzF <- zzF[zz$Powell <= 3490,]
dim(zzF)
zzF <- data.frame(Mead = zz$Value[zz$Variable == 'Mead'], Powell = zz$Value[zz$Variable == 'Powell'])
zzF <- zzF[zzF$Mead <= 1000,]
zzF <- zzF[zzF$Powell <= 3490,]
dim(zzF)
range(zzF$Mead)
range(zzF$Powell)
dim(zz)
range(zz$Year)
zz <- read.table('C:/alan/CRSS/CRSS.Oct2014/Scenario/re')
zz <- read.table('C:/alan/CRSS/CRSS.Oct2014/results/PMMonthly.txt',header = T)
zzF <- data.frame(Mead = zz$Value[zz$Variable == 'Mead'], Powell = zz$Value[zz$Variable == 'Powell'])
dim(zzF)
zzF <- zzF[zzF$Mead <= 1000,]
dim(zzF)
range(zzF$Mead)
zzF <- zzF[zzF$Powell <= 3490,]
dim(zzF)
range(zzF)
range(zzF$Mead)
range(zzF$Powell)
sList <- rbind(c('KeySlots.rdf','Powell.Pool Elevation','AnnMinLTE',3490,'Powell'),c('KeySlots.rdf','Mead.Pool Elevation', 'AnnMinLTE','1000','Mead'))
getDataForAllScens('DNF,2007Dems,IG','Oct',sList,'C:/alan/CRSS/CRSS.Oct2014/Scenario/','C:/alan/CRSS/CRSS.Oct2014/results/PMAnnMinLTE.txt')
sList
sList <- createSlotAggList(sList)
getDataForAllScens('DNF,2007Dems,IG','Oct',sList,'C:/alan/CRSS/CRSS.Oct2014/Scenario/','C:/alan/CRSS/CRSS.Oct2014/results/PMAnnMinLTE.txt')
zz <- read.table('C:/alan/CRSS/CRSS.Oct2014/results/PMAnnMinLTE.txt',header = T)
zz2 <- zz
zzF <- data.frame(Mead = zz$Value[zz$Variable == 'Mead'], Powell = zz$Value[zz$Variable == 'Powell'])
dim(zzF)
zzF <- zzF[zzF$Mead == 1,]
dim(zzF)
zzF <- data.frame(Mead = zz$Value[zz$Variable == 'Mead'], Powell = zz$Value[zz$Variable == 'Powell'])
range(zzF$Mead)
zzF <- zzF[zzF$Mead == 100,]
dim(zzF)
zzF <- zzF[zzF$Powell == 100,]
dim(zzF)
zz <- zz2
range(zz$Value)
range(zz$Year)
zz <- zz[zz$Year %in% 2015:2026,]
zzF <- data.frame(Mead = zz$Value[zz$Variable == 'Mead'], Powell = zz$Value[zz$Variable == 'Powell'])
dim(zzF)
zzF <- zzF[zzF$Mead == 100,]
dim(zzF)
zzF <- zzF[zzF$Powell == 100,]
dim(zzF)
range(zzF)
zz <- read.rdf('C:/alan/CRSS/CRSS.Oct2014/results/PMAnnMinLTE.txt',header = F)
zz <- read.rdf('C:/alan/CRSS/CRSS.Oct2014/results/PMAnnMinLTE.txt',header = T)
zz <- read.table('C:/alan/CRSS/CRSS.Oct2014/results/PMAnnMinLTE.txt',header = T)
zz <- [zz$Variable == 'Mead' & zz$Year %in% 2015:2026,]
zz <- read.table('C:/alan/CRSS/CRSS.Oct2014/results/PMAnnMinLTE.txt',header = T)
zz <- zz[zz$Variable == 'Mead' & zz$Year %in% 2015:2026,]
dim(zz)
library(ddplyr)
library(plyr)
xx <- ddply(zz, .(Trace,Variable),summarize, traceMax = max(Value))
xx
zz$Value[zz$Trace == 6]
zz$Value[zz$Trace == 91]
zz$Value[zz$Trace == 97]
sum(xx$Value)/100
sum(xx$traceMax)/100
zz <- zz[zz$Year %in% 2015:2019,]
xx <- ddply(zz, .(Trace,Variable),summarize, traceMax = max(Value))
sum(xx$traceMax)/100
library(RWDataPlot)
?createSlotAggList
devtools::document()
?createSlotAggList
library(RWDataPlot)
?createSlotAggList
library(RWDataPlot)
?createSlotAggList
setwd('C:/alan/LTEMP/CRSS/results/')
library(RWDataPlot)
mlff <- read.rdf('final/DNF_21,A,NA,MLFF/KeySlots.rdf')
h1 <- read.rdf('final/DNF_21,A,NA,Hybrid1//KeySlots.rdf')
wyM <- rdfSlotToMatrix(mlff,'PowellOperation.PowellWYRelease')
wyH <- rdfSlotToMatrix(h1,'PowellOperation.PowellWYRelease')
wyM <- wyM[seq(12,252,12),]
wyH <- wyH[seq(12,252,12),]
wyM - wyH
wyM[,3]
wyH[,4]
mean(wyM-wyH)
min(wyM-wyH)
max(wyM-wyH)
wyM[,3]
wyH[,3]
mlff <- read.rdf('final/DNF_21,A,NA,MLFF/ArgonneSlots.rdf')
listSlots(mlf)
listSlots(mlff)
mlff <- read.rdf('final/DNF_21,A,NA,MLFF/BORSlots.rdf')
listSlots(mlff)
h1 <- read.rdf('final/DNF_21,A,NA,Hybrid1//BORSlots.rdf')
rtcd <- read.rdf('final/DNF_21,A,NA,RTCD/BORSlots.rdf')
wyR <- rdfSlotToMatrix(rtcd)
wyR <- rdfSlotToMatrix(rtcd,'PowellOperation.PowellWYRelease')
mean(wyR-wyM)
wyR<- wyR[seq(12,252,12),]
mean(wyR-wyM)
max(wyR-wyM)
min(wyR-wyM)
wyaM <- rdfSlotToMatrix(mlff,"PowellOperation.PowellWYReleaseAdjustedForCarryoverEQ")
wyaH <- rdfSlotToMatrix(h1,"PowellOperation.PowellWYReleaseAdjustedForCarryoverEQ")
dim(wyaM)
wyaM <- wyaM[seq(12,252,12),]
wyaH <- wyaH[seq(12,252,12),]
wyaM[,3]
wyaH[,3]
wyaM[,3]-wyaH[,3]
listSlots(mlff)
ceqM <- rdfSlotToMatrix(mlff, "EqualizationData.CarryoverEQVolume")
ceqH <- rdfSlotToMatrix(h1, "EqualizationData.CarryoverEQVolume")
ceq[1:24,3]
ceqM[1:24,3]
ceqM[1:21,3]
ceqM[21,3]
ceqM <- ceqM[seq(9,252,12),]
ceqH <- ceqH[seq(9,252,12),]
ceqH
ceqH[,3]
ceq[,3]
ceqH <- rdfSlotToMatrix(h1, "EqualizationData.CarryoverEQVolume")
ceq[9,3]
ceqH[9,3]
ceqH[21,3]
ceqH[23,3]
ceqH[22,3]
ceqH[1:24,3]
ceqM[1:24,3]
ceqM <- rdfSlotToMatrix(mlff, "EqualizationData.CarryoverEQVolume")
ceqM[1:24,3]
ceqM[22,3]
ceqM[21,3]
ceqM <- ceqM[seq(9,252,12),]
ceqH <- ceqH[seq(9,252,12),]
ceqM[,3]
ceqH[,3]
wyaM[,3]
wyaH
plot(wyaM[,3],type = 'l')
lines(wyH[,3],col = 'red')
lines(wyaH[,3],col = 'red')
plot(wyaM[,3],type = 'l')
lines(wyaH[,3],col = 'red')
wyaM[,3] - wyaH[,3]
listSlots(mlff)
eqfM <- rdfSlotToMatrix(mlff,"SummaryOutputData.EqualizationAbove823")
eqfH <- rdfSlotToMatrix(hy1,"SummaryOutputData.EqualizationAbove823")
eqfH <- rdfSlotToMatrix(h\1,"SummaryOutputData.EqualizationAbove823")
eqfH <- rdfSlotToMatrix(h1,"SummaryOutputData.EqualizationAbove823")
eqfM <- eqfM[seq(12,252,12),]
eqfH <- eqfH[seq(12,252,12),]
eqfM[,3]
eqfH[,3]
ceqM[,3]
wyR
wyM-wyR
dd <- wyM-wyR
dd[,1]
dd[,2]
dd[,3]
dd[,4]
dd[,5]
dd[,6]
dd[,7]
dd[,8]
ceqM[,1]
ceqH[,1]
ceqM[,2]
ceqH[,2]
ceqM[,3]
ceqH[,3]
ceqM[,4]
ceqM[,5]
ceqM[,6]
ceqM[,7]
ceqH[,7]
ceqM[,8]
ceqM[12,8]
ceqH[,8]
ceqM[,9]
ceqM[,10]
ceqM[,11]
ceqH[,11]
ceqM[,12]
ceqM[,13]
ceqH[,13]
ceqM[,14]
ceqH[,14]
ceqM[,15]
ceqH[,15]
ceqM[,16]
ceqH[,16]
ceqM[,17]
ceqM[,18]
ceqH[,18]
ceqM[,19]
ceqM[,20]
ceqH[,20]
ceqM[,21]
ceqH[,21]
wyR
getwd()
write.csv(wyR,'C:/alan/LTEMP/results/rtcdWYRelease.csv')
wyaM-wyaH
eqfM
eqfH
eqfM[1:5,5]
eqfH[1:5,5]
eqfH[1:21,4]
eqfM[1:21,4]
eqfM[1:21,1]
eqfM[1:21,2]
wyH[1:21,2]
eqfM[1:21,3]
wyH[1:21,3]
wyH[,6]
wyH[12:21,6]
wyH[12:21,7]
wyH[1:3,8]
4000000000/11000
4000000000/10000
4e5
as.long(4e5)
as.numeric(4e5)
formatC(4e5)
formatC(4e5,)
?formatC
prettyNum(4e5)
4000000000/15000
400000*4
4000000000/15000*4
mean(c(1600000,1066667))
11563200000/10000
11563200000/15000
library(RWDataPlot)
browseVignettes("RWDataPlot")
zz
zz <- read.rdf('C:/alan/CRSS/CRSS.Oct2014/Scenario/DNF,2007Dems,IG/KeySlots.rdf')
names(zz)
names(zz)zz$runs[[1]]
names(zz$runs[[1]]$objects)
zz$runs[[1]]$objects$'TotVal.Powell'
length(zz$runs[[1]]$objects$'TotVal.Powell')
names(zz$runs[[1]]$objects$'TotVal.Powell')
length(zz$runs[[1]]$objects$'TotVal.Powell'$values)
?createSlotAggList
devtools::document()
devtools::document()
library(RWDataPlot)
?getDataForAllScens
getDataForAllScens(scenFolders, scenNames, slotAggList, scenPath, oFile)
library(RWDataPlot)
devtools::install(RWDataPlot)
devtools::install('RWDataPlot')
devtools::build_vignettes()
browseVignettes('RWDataPlot')
library(RWDataPlot)
zz <- read.rdf('inst//extdata/Scenario/DNF,2007Dems,IG/KeySlots.rdf')
rm(zz)
zz <- read.rdf(system.file('extdata/Scenario/DNF,2007Dems,IG/KeySlots.rdf',package = 'RWDataPlot'))
system.file('extdata/Scenario/DNF,2007Dems,IG/KeySlots.rdf',package = 'RWDataPlot')
system.file('extdata/DNF,2007Dems,IG/KeySlots.rdf',package = 'RWDataPlot')
Scenario
system.file('extdata/Scenario/DNF,2007Dems,IG/KeySlots.rdf',package = 'RWDataPlot')
'inst/extdata/Scenario/DNF,2007Dems,IG/KeySlots.rdf'
system.file(extdata/Scenario/DNF,2007Dems,IG/KeySlots.rdf',package = 'RWDataPlot')
system.file('extdata/Scenario/DNF,2007Dems,IG/KeySlots.rdf',package = 'RWDataPlot')
?system.file
library(RWDataPlot)
system.file('extdata/Scenario/DNF,2007Dems,IG/KeySlots.rdf',package = 'RWDataPlot')
getwd()
devtools::document()
?getMinAnnValue
library(RWDataPlot)
?getMinAnnValue
devtools::document()
library(RWDataPlot)
?flowWeightedAvgAnnConc
?getMinAnnValue
devtools::document()
?getMinAnnValue
?getMinAnnValue
devtools::document()
?getMinAnnValue
library(RWDataPlot)
?getMinAnnValue
?flowWeightedAvgAnnConc
vignette(RWDataPlot)
vignette('RWDataPlot'')
vignette('RWDataPlot')
vignette('RWDataPlot')
library(RWDataPlot)
vignette('RWDataPlot')
build()
library(devtools)
build()
vignette('RWDataPlot')
browseVignettes('RMarkDown')
browseVignettes('RWDataPlot')
build()
install_github
install_remotes
devtools::install_remotes
browseVignettes('RWDataPlot')
build()
?rmarkdown::html_vignette
library(RWDataPlot)
?createSlotAggList
devtools::document()
library(RWDataPlot)
?createSlotAggList
library(RWDataPlot)
install.packages("knitr")
library(RWDataPlot)
install.packages("Rtools")
ver
version
library(RWDataPlot)
library(RWDataPlot)
