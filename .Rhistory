scale_x_continuous(minor_breaks = 1990:3000, breaks = seq(1990,3000,1)) +
scale_y_continuous(minor_breaks = seq(yL[1],yL[2],5), breaks = seq(yL[1],yL[2],10)) +
theme(panel.grid.minor = element_line(color = 'white', size = .4),
panel.grid.major = element_line(color = 'white', size = .6)) +
scale_color_discrete(guide = guide_legend(title = legendTitle,ncol = nC)) +
theme(legend.position = legLoc, axis.text.x = element_text(angle = 90, hjust = -1))
gg
gg <- ggplot(zz, aes(Year, Value, color = Variable))
gg <- gg + stat_summary(fun.y = mean, geom = 'line', size = 1) + facet_grid(.~Scenario) +
coord_cartesian(ylim = yL) +
scale_x_continuous(minor_breaks = 1990:3000, breaks = seq(1990,3000,1)) +
scale_y_continuous(minor_breaks = seq(yL[1],yL[2],5), breaks = seq(yL[1],yL[2],10)) +
theme(panel.grid.minor = element_line(color = 'white', size = .4),
panel.grid.major = element_line(color = 'white', size = .6)) +
scale_color_discrete(guide = guide_legend(title = legendTitle,ncol = nC)) +
theme(legend.position = legLoc, axis.text.x = element_text(angle = 90))
gg
gg <- ggplot(zz, aes(Year, Value, color = Variable))
gg <- gg + stat_summary(fun.y = mean, geom = 'line', size = 1) + facet_grid(.~Scenario) +
coord_cartesian(ylim = yL) +
scale_x_continuous(minor_breaks = 1990:3000, breaks = seq(1990,3000,1)) +
scale_y_continuous(minor_breaks = seq(yL[1],yL[2],5), breaks = seq(yL[1],yL[2],10)) +
theme(panel.grid.minor = element_line(color = 'white', size = .4),
panel.grid.major = element_line(color = 'white', size = .6)) +
scale_color_discrete(guide = guide_legend(title = legendTitle,ncol = nC)) +
theme(legend.position = legLoc, axis.text.x = element_text(angle = -90))
gg
gg <- ggplot(zz, aes(Year, Value, color = Variable))
gg <- gg + stat_summary(fun.y = mean, geom = 'line', size = 1) + facet_grid(.~Scenario) +
coord_cartesian(ylim = yL) +
scale_x_continuous(minor_breaks = 1990:3000, breaks = seq(1990,3000,1)) +
scale_y_continuous(minor_breaks = seq(yL[1],yL[2],5), breaks = seq(yL[1],yL[2],10)) +
theme(panel.grid.minor = element_line(color = 'white', size = .4),
panel.grid.major = element_line(color = 'white', size = .6)) +
scale_color_discrete(guide = guide_legend(title = legendTitle,ncol = nC)) +
theme(legend.position = legLoc, axis.text.x = element_text(angle = 90,hjust-5))
gg <- ggplot(zz, aes(Year, Value, color = Variable))
gg <- gg + stat_summary(fun.y = mean, geom = 'line', size = 1) + facet_grid(.~Scenario) +
coord_cartesian(ylim = yL) +
scale_x_continuous(minor_breaks = 1990:3000, breaks = seq(1990,3000,1)) +
scale_y_continuous(minor_breaks = seq(yL[1],yL[2],5), breaks = seq(yL[1],yL[2],10)) +
theme(panel.grid.minor = element_line(color = 'white', size = .4),
panel.grid.major = element_line(color = 'white', size = .6)) +
scale_color_discrete(guide = guide_legend(title = legendTitle,ncol = nC)) +
theme(legend.position = legLoc, axis.text.x = element_text(angle = 90,hjust=-5))
gg
gg <- ggplot(zz, aes(Year, Value, color = Variable))
gg <- gg + stat_summary(fun.y = mean, geom = 'line', size = 1) + facet_grid(.~Scenario) +
coord_cartesian(ylim = yL) +
scale_x_continuous(minor_breaks = 1990:3000, breaks = seq(1990,3000,1)) +
scale_y_continuous(minor_breaks = seq(yL[1],yL[2],5), breaks = seq(yL[1],yL[2],10)) +
theme(panel.grid.minor = element_line(color = 'white', size = .4),
panel.grid.major = element_line(color = 'white', size = .6)) +
scale_color_discrete(guide = guide_legend(title = legendTitle,ncol = nC)) +
theme(legend.position = legLoc, axis.text.x = element_text(angle = 90,hjust=0))
gg
gg <- gg + stat_summary(fun.y = mean, geom = 'line', size = 1) + facet_grid(.~Scenario) +
coord_cartesian(ylim = yL) +
scale_x_continuous(minor_breaks = 1990:3000, breaks = seq(1990,3000,1)) +
scale_y_continuous(minor_breaks = seq(yL[1],yL[2],5), breaks = seq(yL[1],yL[2],10)) +
theme(panel.grid.minor = element_line(color = 'white', size = .4),
panel.grid.major = element_line(color = 'white', size = .6)) +
scale_color_discrete(guide = guide_legend(title = legendTitle,ncol = nC)) +
theme(legend.position = legLoc, axis.text.x = element_text(angle = 90,hjust=1))
gg
gg <- ggplot(zz, aes(Year, Value, color = Variable))
gg <- gg + stat_summary(fun.y = mean, geom = 'line', size = 1) + facet_grid(.~Scenario) +
coord_cartesian(ylim = yL) +
scale_x_continuous(minor_breaks = 1990:3000, breaks = seq(1990,3000,1)) +
scale_y_continuous(minor_breaks = seq(yL[1],yL[2],5), breaks = seq(yL[1],yL[2],10)) +
theme(panel.grid.minor = element_line(color = 'white', size = .4),
panel.grid.major = element_line(color = 'white', size = .6)) +
scale_color_discrete(guide = guide_legend(title = legendTitle,ncol = nC)) +
theme(legend.position = legLoc, axis.text.x = element_text(angle = 90,vjust=1))
gg
gg <- ggplot(zz, aes(Year, Value, color = Variable))
gg <- gg + stat_summary(fun.y = mean, geom = 'line', size = 1) + facet_grid(.~Scenario) +
coord_cartesian(ylim = yL) +
scale_x_continuous(minor_breaks = 1990:3000, breaks = seq(1990,3000,1)) +
scale_y_continuous(minor_breaks = seq(yL[1],yL[2],5), breaks = seq(yL[1],yL[2],10)) +
theme(panel.grid.minor = element_line(color = 'white', size = .4),
panel.grid.major = element_line(color = 'white', size = .6)) +
scale_color_discrete(guide = guide_legend(title = legendTitle,ncol = nC)) +
theme(legend.position = legLoc, axis.text.x = element_text(angle = 90,vjust=0))\
gg <- ggplot(zz, aes(Year, Value, color = Variable))
gg <- gg + stat_summary(fun.y = mean, geom = 'line', size = 1) + facet_grid(.~Scenario) +
coord_cartesian(ylim = yL) +
scale_x_continuous(minor_breaks = 1990:3000, breaks = seq(1990,3000,1)) +
scale_y_continuous(minor_breaks = seq(yL[1],yL[2],5), breaks = seq(yL[1],yL[2],10)) +
theme(panel.grid.minor = element_line(color = 'white', size = .4),
panel.grid.major = element_line(color = 'white', size = .6)) +
scale_color_discrete(guide = guide_legend(title = legendTitle,ncol = nC)) +
theme(legend.position = legLoc, axis.text.x = element_text(angle = 90,vjust=0))
gg
gg <- ggplot(zz, aes(Year, Value, color = Variable))
gg <- gg + stat_summary(fun.y = mean, geom = 'line', size = 1) + facet_grid(.~Scenario) +
coord_cartesian(ylim = yL) +
scale_x_continuous(minor_breaks = 1990:3000, breaks = seq(1990,3000,1)) +
scale_y_continuous(minor_breaks = seq(yL[1],yL[2],5), breaks = seq(yL[1],yL[2],10)) +
theme(panel.grid.minor = element_line(color = 'white', size = .4),
panel.grid.major = element_line(color = 'white', size = .6)) +
scale_color_discrete(guide = guide_legend(title = legendTitle,ncol = nC)) +
theme(legend.position = legLoc, axis.text.x = element_text(angle = 90,vjust=.5))
gg
zz <- read.table(paste(dataPath,'critStats.txt',sep = ''),header = T)
zz$Scenario <- factor(zz$Scenario, levels = scenNames)
zz <- zz[zz$Year %in% yy,]
gg <- ggplot(zz, aes(Year, Value, color = Variable))
gg <- gg + stat_summary(fun.y = mean, geom = 'line', size = 1) + facet_grid(.~Scenario) +
coord_cartesian(ylim = yL) +
scale_x_continuous(minor_breaks = 1990:3000, breaks = seq(1990,3000,1)) +
scale_y_continuous(minor_breaks = seq(yL[1],yL[2],5), breaks = seq(yL[1],yL[2],10)) +
theme(panel.grid.minor = element_line(color = 'white', size = .4),
panel.grid.major = element_line(color = 'white', size = .6)) +
scale_color_discrete(guide = guide_legend(title = legendTitle,ncol = nC)) +
theme(legend.position = legLoc, axis.text.x = element_text(angle = 90,vjust=.5))
pdf(paste(figPath,figTitle,sep = ''),width = 8, height = 6)
print(gg)
dev.off()
figTitle <- 'critStats_CRSSOct2014.pdf'''
figTitle <- 'critStats_CRSSOct2014.pdf'
rm(zz)
zz <- read.table(paste(dataPath,'critStats.txt',sep = ''),header = T)
zz$Scenario <- factor(zz$Scenario, levels = scenNames)
zz <- zz[zz$Year %in% yy,]
gg <- ggplot(zz, aes(Year, Value, color = Variable))
gg <- gg + stat_summary(fun.y = mean, geom = 'line', size = 1) + facet_grid(.~Scenario) +
coord_cartesian(ylim = yL) +
scale_x_continuous(minor_breaks = 1990:3000, breaks = seq(1990,3000,1)) +
scale_y_continuous(minor_breaks = seq(yL[1],yL[2],5), breaks = seq(yL[1],yL[2],10)) +
theme(panel.grid.minor = element_line(color = 'white', size = .4),
panel.grid.major = element_line(color = 'white', size = .6)) +
scale_color_discrete(guide = guide_legend(title = legendTitle,ncol = nC)) +
theme(legend.position = legLoc, axis.text.x = element_text(angle = 90,vjust=.5))
pdf(paste(figPath,figTitle,sep = ''),width = 8, height = 6)
print(gg)
dev.off()
tst <- 1 < 9
tst
tst <- 1 == 9
tst
?ifelse
ifelse(1<10,1,2)
ifelse(1==10,1,2)
library(RWDataPlot)
# gather all necessary data into two files: 1 for monthly data, and the other for annualized
scenFolders = c('DNF,2007Dems,IG/','VIC,2007Dems,IG/')
newScenNum <- 1
scenNames = c('Observed Hydrology','Climate Change Hydrology')
resPath = 'C:/alan/CRSS/CRSS.Oct2014/Scenario/'
dataPath = 'C:/alan/CRSS/CRSS.Oct2014/results/'
figPath = 'C:/alan/CRSS/CRSS.Oct2014/figs/'
figTitle <- 'critStats_CRSSOct2014.pdf'
slotAggList <- 'C:/alan/CRSS/CRSS.Oct2014/CritStatsList.csv'
yy <- 2015:2026
# plot options
legLoc <- 'bottom'
legendTitle <- ''
nC <- 4 # number of columns in legend
yL <- (0,100)
if(TRUE){
# annual data
print('getting annual data')
flush.console()
srA <- createSlotAggList(slotAggList)
getDataForAllScens(scenFolders, scenNames, srA, resPath, paste(dataPath,'critStats.txt',sep = ''))
}
zz <- read.table('results/critStats.txt')
zz <- read.table('results/critStats.txt',header=T)
names(zz)
levels(zz$Variable)
scenFolders = c('DNF,2007Dems,IG/','VIC,2007Dems,IG/')
newScenNum <- 1
scenNames = c('Observed Hydrology','Climate Change Hydrology')
resPath = 'C:/alan/CRSS/CRSS.Oct2014/Scenario/'
dataPath = 'C:/alan/CRSS/CRSS.Oct2014/results/'
figPath = 'C:/alan/CRSS/CRSS.Oct2014/figs/'
figTitle <- 'critStats_CRSSOct2014.pdf'
slotAggList <- 'C:/alan/CRSS/CRSS.Oct2014/CritStatsList.csv'
yy <- 2015:2026
# plot options
legLoc <- 'bottom'
legendTitle <- ''
nC <- 4 # number of columns in legend
yL <- c(0,100)
if(TRUE){
# annual data
print('getting annual data')
flush.console()
srA <- createSlotAggList(slotAggList)
getDataForAllScens(scenFolders, scenNames, srA, resPath, paste(dataPath,'critStats.txt',sep = ''))
}
zz <- read.table('results/critStats.txt')
namesx(zz)
names(zz)
zz <- read.table('results/critStats.txt',header=T)
names(zz)
levels(zz$Variable)
zz$Scenario <- factor(zz$Scenario, levels = scenNames)
zz <- zz[zz$Year %in% yy,]
gg <- ggplot(zz, aes(Year, Value, color = Variable))
gg <- gg + stat_summary(fun.y = mean, geom = 'line', size = 1) + facet_grid(.~Scenario) +
coord_cartesian(ylim = yL) +
scale_x_continuous(minor_breaks = 1990:3000, breaks = seq(1990,3000,1)) +
scale_y_continuous(minor_breaks = seq(yL[1],yL[2],5), breaks = seq(yL[1],yL[2],10)) +
theme(panel.grid.minor = element_line(color = 'white', size = .4),
panel.grid.major = element_line(color = 'white', size = .6)) +
scale_color_discrete(guide = guide_legend(title = legendTitle,ncol = nC)) +
theme(legend.position = legLoc, axis.text.x = element_text(angle = 90,vjust=.5))
pdf(paste(figPath,figTitle,sep = ''),width = 8, height = 6)
print(gg)
dev.off()
source('getCritStats.R')
levels(zz$Variable)
?read.table
zz <- read.table('results/critStats.txt',header = T, allowEscapes=TRUE)
?read.table
levels(zz$Variable)
zz$Scenario <- factor(zz$Scenario, levels = scenNames)
zz <- zz[zz$Year %in% yy,]
gg <- ggplot(zz, aes(Year, Value, color = Variable))
gg <- gg + stat_summary(fun.y = mean, geom = 'line', size = 1) + facet_grid(.~Scenario) +
coord_cartesian(ylim = yL) +
scale_x_continuous(minor_breaks = 1990:3000, breaks = seq(1990,3000,1)) +
scale_y_continuous(minor_breaks = seq(yL[1],yL[2],5), breaks = seq(yL[1],yL[2],10)) +
theme(panel.grid.minor = element_line(color = 'white', size = .4),
panel.grid.major = element_line(color = 'white', size = .6)) +
scale_color_discrete(guide = guide_legend(title = legendTitle,ncol = nC)) +
theme(legend.position = legLoc, axis.text.x = element_text(angle = 90,vjust=.5))
pdf(paste(figPath,figTitle,sep = ''),width = 8, height = 6)
print(gg)
dev.off()
?createSlotAggList
library(RWDataPlot)
?createSlotAggList
devtools::build()
setwd('C:/alan/RPackages//RWDataPlot')
devtools::build()
library(RWDataPlot)
?createSlotAggList
devtools::document()
?createSlotAggList
devtools::document()
?createSlotAggList
devtools::document()
devtools::document()
?createSlotAggList
devtools::document()
?createSlotAggList
devtools::document()
?createSlotAggList
?processSlots
devtools::document()
?processSlots
zz <- read.rdf('C:/alan/RAND/LLNLProj/results/Rch.rdf')
library(RWDataPlot)
zz <- read.rdf('C:/alan/RAND/LLNLProj/results/Rch.rdf')
listSlots(zz)
vr <- rdfSlotToMatrix(rdf = zz, 'VirginRiver.Inflow')
vr[1:12,]
library(RWDataPlot)
zz <- read.rdf('C:/alan/CRSS/CRSS.Oct2014/temp/rw_Rch_000_RButler.rdf')
listSlots(zz)
vr = rdfSlotToMatrix(zz,'VirginRiver.Inflow')
vr
vr[1:12]
zz <- read.rdf('C:/alan/CRSS/CRSS.Oct2014/temp/rw_Rch_001_RButler.rdf')
vr = rdfSlotToMatrix(zz,'VirginRiver.Inflow')
vr[1:12]
rm(list = ls())
source('C:/alan/CRSS/CRSS.Oct2014/getCritStats.R')
source('C:/alan/CRSS/CRSS.Oct2014/getCritStats.R')
library(RWDataPlot)
zz <- read.rdf('C:/alan/CRSS/CRSS.Oct2014/results/annualData.txt')
zz <- read.rdf('C:/alan/CRSS/CRSS.Oct2014/results/annualData.txt')
zz <- read.table('C:/alan/CRSS/CRSS.Oct2014/results/annualData.txt',header = T)
names(zz)
levels(zz$Scenario)
levels(zz$variable)
levels(zz$Variable)
zz <- zz[zz$Variable == "Mead.Pool Elevation_EOCY_1",]
zz
zz2 <- ddp
library(plyr)
?ddply
names(zz)
xx <- ddply(zz[zz$Variable == 'Mead.Pool Elevation_EOCY_1',],.(Scenario,Trace,Year),summarize,LTThresh = Value <= 1050)
xx[1:5,]
sum(c('FALSE','TRUE','TRUE'))
sum(c(FALSE,TRUE,TRUE))
mean(c(FALSE,TRUE,TRUE))
yy <- ddply(xx,.(Scenario,Year),summarize,PrctLT = mean(LTThresh))
yy[1:5,]
levels(yy$Scenario)
yy[yy$Year %in% 2015:2019,]
aug <- read.rdf('C:/alan/CRSS/CRSS.Aug2014/Scenario/DNF,2007Dems,IG/KeySlots.rdf')
oct <- read.rdf('C:/alan/CRSS/CRSS.Aug2014/Scenario/DNF,2007Dems,IG/KeySlots.rdf')
mA <- rdfSlotToMatrix(aug, 'Mead.Pool Elevation')
mO <- rdfSlotToMatrix(oct, 'Mead.Pool Elevation')
mA <- mA[seq(12,60,12),]
mO <- mO[seq(12,60,12),]
mA[mA <= 1050,] <- 1
dim(mA)
mA[mA <= 1050] <- 1
mA[mA > 1050] = 1
ma <- apply(mA, 1, mean)
mO[mO <= 1050] <- 1
mA[mA > 1050] <- 0
mO[mO > 1050] <- 0
mO <- apply(mO, 1, mean)
mA <- rdfSlotToMatrix(aug, 'Mead.Pool Elevation')
mA <- mA[seq(12,60,12),]
mA[mA <= 1050] <- 1
mA[mA > 1050] <- 0
ma <- apply(mA, 1, mean)
mO
mA
ma <- apply(mA, 1, mean)
mA
ma
mO
yy
yy[yy$Year %in% 2015:2019]
yy[yy$Year %in% 2015:2019,]
ma
mO
mO <- read.rdf('C:/alan/CRSS/CRSS.Oct2014/Scenario/DNF,2007Dems,IG/KeySlots.rdf')
mO <- rdfSlotToMatrix(mO)[seq(12,60,12),]
mO <- rdfSlotToMatrix(mO)
mO <- rdfSlotToMatrix(mO,'Mead.Pool Elevation')[seq(12,60,12),]
mO[mO<=1050] <- 1
mO[mO > 1050] <- 0
mO <- apply(mO,1,mean)
mO
yy[yy$Year %in% 2015:2019,]
ma
library(RWDataPlot)
?createSlotAggList
zz <- read.rdf('C:/alan/CRSS/CRSS.Oct2014/Scenario/DNF,2007Dems,IG/Res.rdf')
listSlots(zz)
source('C:/alan/code/testShiny/getScenData.R')
source('C:/alan/code/testShiny/getScenData.R')
source('C:/alan/code/testShiny/getScenData.R')
zz <- read.table('C:/alan/code/testShiny/critStats.txt',header=T)
names(zz)
levels(zz$Scenario)
levels(zz$Variable)
length(levels(zz$Variable))
source('C:/alan/code/testShiny/getScenData.R')
zz <- read.table('C:/alan/code/testShiny/critStats.txt',header=T)
levels(zz$Scenario)
levels(zz$Variable)
names(zz)
res <- rep(NA,dim(zz)[1])
length(res)
res[zz$Variable == 'Bronco Pool Elevation' | zz$Variable == 'Bronco Storage'] <- 'Bronco'
res[zz$Variable == 'Deep Snow Pool Elevation' | zz$Variable == 'Deep Snow Storage'] <- 'Deep Snow'
levels(as.factor(res))
var <- rep(NA,dim(zz)[1])
var[zz$Variable == 'Bronco Storage' | zz$Variable == 'Deep Snow Storage'] <- 'Storage'
var[zz$Variable == 'Bronco Storage' | zz$Variable == 'Deep Snow Storage'] <- 'Pool Elevation'
var <- rep(NA,dim(zz)[1])
var[zz$Variable == 'Bronco Storage' | zz$Variable == 'Deep Snow Storage'] <- 'Storage'
var[zz$Variable == 'Bronco Pool Elevation' | zz$Variable == 'Deep Snow Pool Elevation'] <- 'Pool Elevation'
levels(as.factor(var))
zz$Variable <- var
zz$Reservoir <- res
is.factor(zz$Variable)
is.factor(zz$Reservoir)
zz$Variable <- as.factor(zz$Variable)
zz$Reservoir <- as.factor(zz$Reservoir)
write.table(zz, 'C:/alan/code/testShiny/fullData.txt')
xx <- read.table('C:/alan/code/testShiny/fullData.txt')
xx <- read.table('C:/alan/code/testShiny/fullData.txt',header = T)
dim(xx)
dim(zz)
names(xx)
names(zz)
sum(xx-zz)
zz <- zz[zz$Year %in% 2015:2019,]
dim(zz)
dim(xx)
levels(xx$Scenario)
xx <- xx[xx$Scenario %in% c('Baseline','Scenario A'),]
dim(xx)
958272/12
958272/2
zz <- zz[zz$Scenario %in% c('Baseline','Scenario A'),]
dim(zz)
write.table(zz,'C:/alan/code/testShiny/trimData.txt')
zz <- read.table('C:/alan/CRSS/CRSS.Oct2014/results/critStats.txt',header = T)
names(zz)
levels(zz$Variable)
library(RWDataPlot)
?RWDataPlot
?RWDataPlot-package
?"RWDataPlot-package""
?"RWDataPlot-package"
sList <- rbind(c('KeySlots.rdf','Powell.Pool Elevation','Monthly',NA,'Powell'),c('KeySlots.rdf','Mead.Pool Elevation', 'Monthly',NA,'Mead'))
sList
sList <- createSlotAggList(sList)
sList
getDataForAllScens('DNF,2007Dems,IG','Oct',sList,'C:/alan/CRSS/CRSS.Oct2014/Scenario/','C:/alan/CRSS/CRSS.Oct2014/results/PMMonthly.txt')
zz <- read.table('C:/alan/CRSS/CRSS.Oct2014/results/PMMonthly.txt',header = T)
levels(zz$Variable)
names(zz)
range(zz$Year)
zz2 <- zz
zz <- zz[zz$Year %in% 2015:2026,]
dim(zz)
30240/2
zzF <- zz$Powell[zz$Mead <= 1000]
length(zzF)
zzF
zzF <- zz$Powell[Which(zz$Mead <= 1000)]
zzF <- zz$Powell[which(zz$Mead <= 1000)]
length(zzF)
zzF
zz$Mead <= 1000
zz$Mead[1:10]
zzF <- data.frame(Mead = zz$Value[zz$Variable == 'Mead'])
zzF
dim(zzF)
zzF <- data.frame(Mead = zz$Value[zz$Variable == 'Mead'], Powell = zz$Value[zz$Variable == 'Powell'])
dim(zzF)
zzF <- zzF[zz$Mead <= 1000,]
dim(zzF)
zzF <- data.frame(Mead = zz$Value[zz$Variable == 'Mead'], Powell = zz$Value[zz$Variable == 'Powell'])
range(zz$Mead)
range(zz$Mead)
range(zzF$Mead)
zzF <- zzF[zzF$Mead <= 1000,]
dim(zzF)
range(zzF$Mead)
range(zzF$Powell)
zzF <- zzF[zz$Powell <= 3490,]
dim(zzF)
zzF <- data.frame(Mead = zz$Value[zz$Variable == 'Mead'], Powell = zz$Value[zz$Variable == 'Powell'])
zzF <- zzF[zzF$Mead <= 1000,]
zzF <- zzF[zzF$Powell <= 3490,]
dim(zzF)
range(zzF$Mead)
range(zzF$Powell)
dim(zz)
range(zz$Year)
zz <- read.table('C:/alan/CRSS/CRSS.Oct2014/Scenario/re')
zz <- read.table('C:/alan/CRSS/CRSS.Oct2014/results/PMMonthly.txt',header = T)
zzF <- data.frame(Mead = zz$Value[zz$Variable == 'Mead'], Powell = zz$Value[zz$Variable == 'Powell'])
dim(zzF)
zzF <- zzF[zzF$Mead <= 1000,]
dim(zzF)
range(zzF$Mead)
zzF <- zzF[zzF$Powell <= 3490,]
dim(zzF)
range(zzF)
range(zzF$Mead)
range(zzF$Powell)
sList <- rbind(c('KeySlots.rdf','Powell.Pool Elevation','AnnMinLTE',3490,'Powell'),c('KeySlots.rdf','Mead.Pool Elevation', 'AnnMinLTE','1000','Mead'))
getDataForAllScens('DNF,2007Dems,IG','Oct',sList,'C:/alan/CRSS/CRSS.Oct2014/Scenario/','C:/alan/CRSS/CRSS.Oct2014/results/PMAnnMinLTE.txt')
sList
sList <- createSlotAggList(sList)
getDataForAllScens('DNF,2007Dems,IG','Oct',sList,'C:/alan/CRSS/CRSS.Oct2014/Scenario/','C:/alan/CRSS/CRSS.Oct2014/results/PMAnnMinLTE.txt')
zz <- read.table('C:/alan/CRSS/CRSS.Oct2014/results/PMAnnMinLTE.txt',header = T)
zz2 <- zz
zzF <- data.frame(Mead = zz$Value[zz$Variable == 'Mead'], Powell = zz$Value[zz$Variable == 'Powell'])
dim(zzF)
zzF <- zzF[zzF$Mead == 1,]
dim(zzF)
zzF <- data.frame(Mead = zz$Value[zz$Variable == 'Mead'], Powell = zz$Value[zz$Variable == 'Powell'])
range(zzF$Mead)
zzF <- zzF[zzF$Mead == 100,]
dim(zzF)
zzF <- zzF[zzF$Powell == 100,]
dim(zzF)
zz <- zz2
range(zz$Value)
range(zz$Year)
zz <- zz[zz$Year %in% 2015:2026,]
zzF <- data.frame(Mead = zz$Value[zz$Variable == 'Mead'], Powell = zz$Value[zz$Variable == 'Powell'])
dim(zzF)
zzF <- zzF[zzF$Mead == 100,]
dim(zzF)
zzF <- zzF[zzF$Powell == 100,]
dim(zzF)
range(zzF)
zz <- read.rdf('C:/alan/CRSS/CRSS.Oct2014/results/PMAnnMinLTE.txt',header = F)
zz <- read.rdf('C:/alan/CRSS/CRSS.Oct2014/results/PMAnnMinLTE.txt',header = T)
zz <- read.table('C:/alan/CRSS/CRSS.Oct2014/results/PMAnnMinLTE.txt',header = T)
zz <- [zz$Variable == 'Mead' & zz$Year %in% 2015:2026,]
zz <- read.table('C:/alan/CRSS/CRSS.Oct2014/results/PMAnnMinLTE.txt',header = T)
zz <- zz[zz$Variable == 'Mead' & zz$Year %in% 2015:2026,]
dim(zz)
library(ddplyr)
library(plyr)
xx <- ddply(zz, .(Trace,Variable),summarize, traceMax = max(Value))
xx
zz$Value[zz$Trace == 6]
zz$Value[zz$Trace == 91]
zz$Value[zz$Trace == 97]
sum(xx$Value)/100
sum(xx$traceMax)/100
zz <- zz[zz$Year %in% 2015:2019,]
xx <- ddply(zz, .(Trace,Variable),summarize, traceMax = max(Value))
sum(xx$traceMax)/100
library(RWDataPlot)
?createSlotAggList
devtools::document()
?createSlotAggList
library(RWDataPlot)
?createSlotAggList
library(RWDataPlot)
?createSlotAggList
